import tkinter as tk
from tkinter import scrolledtext, filedialog
from PIL import Image, ImageTk
import numpy as np
import nltk
from sklearn.cluster import KMeans
from sentence_transformers import SentenceTransformer
import docx

# Ensure necessary NLTK data is downloaded
nltk.download('punkt')


def preprocess_text(text):
    sentences = nltk.sent_tokenize(text)
    return sentences


def extract_features_bert(sentences):
    model = SentenceTransformer('bert-base-nli-mean-tokens')
    embeddings = model.encode(sentences)
    return embeddings


def cluster_sentences(X, n_clusters):
    kmeans = KMeans(n_clusters=n_clusters)
    kmeans.fit(X)
    return kmeans


def summarize_with_bert(text, max_clusters=5):
    sentences = preprocess_text(text)
    if len(sentences) == 0:
        return "No sentences to summarize."

    embeddings = extract_features_bert(sentences)

    # Adjust the number of clusters to be at most the number of sentences
    n_clusters = min(max_clusters, len(sentences))

    kmeans = cluster_sentences(embeddings, n_clusters)

    avg = []
    for j in range(n_clusters):
        idx = np.where(kmeans.labels_ == j)[0]
        avg.append(np.mean(idx))

    summary_sentences = [sentences[int(i)] for i in sorted(avg)]
    summary = ' '.join(summary_sentences)
    return summary


def summarize_text():
    text = text_input.get("1.0", tk.END)
    summary = summarize_with_bert(text, max_clusters=5)
    output_box.delete("1.0", tk.END)
    output_box.insert(tk.END, summary)


def reset_input():
    text_input.delete("1.0", tk.END)
    output_box.delete("1.0", tk.END)


def load_file():
    file_path = filedialog.askopenfilename(filetypes=[("Text Files", "*.txt"), ("Word Documents", "*.docx")])
    if file_path:
        if file_path.endswith('.txt'):
            with open(file_path, 'r', encoding='utf-8') as file:
                text = file.read()
        elif file_path.endswith('.docx'):
            doc = docx.Document(file_path)
            text = '\n'.join([para.text for para in doc.paragraphs])
        text_input.delete("1.0", tk.END)
        text_input.insert(tk.END, text)

# Create the main window
root = tk.Tk()
root.title("Automated Text Summarization")

# Set window size
root.geometry("1920x1080")  # Set the width and height of the window

# Load background image
bg_image = Image.open("BG.png")
bg_image = bg_image.resize((1920, 1080))  # Adjust the size as needed
background_image = ImageTk.PhotoImage(bg_image)

# Create a label to hold the background image
background_label = tk.Label(root, image=background_image)
background_label.place(x=0, y=0, relwidth=1, relheight=1)

# Create input box and label
text_input_label = tk.Label(root, text="Enter text to summarize:", height=2, width=20, fg="black",
                            font=("Helvetica", 14, "bold"), bg='white')
text_input_label.place(x=50, y=80)

text_input_label = tk.Label(root, text=" Upload Files For Here ðŸ‘‰ ", height=2, width=22, fg="black",
                            font=("Helvetica", 14, "bold"), bg='white')
text_input_label.place(x=650, y=80)

text_input_font = tk.font.Font(family="Helvetica", size=12)
text_input = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=110, height=20,
                                       font=text_input_font)  # Increase width and height
text_input.place(x=50, y=120)

text_input_label = tk.Label(root, text=" Summarize text button ðŸ‘‰ ", height=2, width=22, fg="black",
                            font=("Helvetica", 14, "bold"), bg='white')
text_input_label.place(x=650, y=520)

# Button to summarize text
summarize_button = tk.Button(root, text="Summarize Text", command=summarize_text, height=2, width=20, fg="black")
summarize_button.place(x=1000, y=520)

# Button to load text from a file
load_button = tk.Button(root, text="Load Text from File", command=load_file, height=2, width=20, fg="black")
load_button.place(x=1000, y=80)

# Create output box and label
output_box_label = tk.Label(root, text="Summary:", height=2, width=20, fg="black", font=("Helvetica", 14, "bold"),
                            bg='white')
output_box_label.place(x=50, y=520)

output_box_font = tk.font.Font(family="Helvetica", size=12)
output_box = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=110, height=20, font=output_box_font,
                                       )  # Increase width and height
output_box.place(x=50, y=560)

# Button to reset input
reset_button = tk.Button(root, text="Reset", command=reset_input, height=2, width=10, fg="black")
reset_button.place(x=1050, y=760)

root.mainloop()
